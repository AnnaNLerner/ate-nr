[
    {
        "id": "cad60d0e.40d8a",
        "type": "tab",
        "label": "Emob",
        "disabled": false,
        "info": ""
    },
    {
        "id": "2f3f69e1.11f5d6",
        "type": "http in",
        "z": "cad60d0e.40d8a",
        "name": "",
        "url": "/camera",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 60,
        "wires": [
            [
                "2af5d6b8.ed9a6a"
            ]
        ]
    },
    {
        "id": "2af5d6b8.ed9a6a",
        "type": "template",
        "z": "cad60d0e.40d8a",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html>\n\n<head>\n  <title>Nice image capture button</title>\n</head>\n\n<body>\n    <style>\n       label.cameraButton {\n  display: inline-block;\n  margin: 1em 0;\n\n  /* Styles to make it look like a button */\n  padding: 0.5em;\n  border: 2px solid #666;\n  border-color: #EEE #CCC #CCC #EEE;\n  background-color: #DDD;\n}\n\n/* Look like a clicked/depressed button */\nlabel.cameraButton:active {\n  border-color: #CCC #EEE #EEE #CCC;\n}\n\n/* This is the part that actually hides the 'Choose file' text box for camera inputs */\nlabel.cameraButton input[accept*=\"camera\"] {\n  display: none;\n} \n    </style>\n  <label class=\"cameraButton\">Take a picture\n    <input type=\"file\" accept=\"image/*;capture=camera\">\n  </label>\n</body>\n\n</html>",
        "output": "str",
        "x": 280,
        "y": 60,
        "wires": [
            [
                "b868b6c.b05d748"
            ]
        ]
    },
    {
        "id": "b868b6c.b05d748",
        "type": "http response",
        "z": "cad60d0e.40d8a",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 450,
        "y": 60,
        "wires": []
    },
    {
        "id": "d28c1922.309418",
        "type": "http in",
        "z": "cad60d0e.40d8a",
        "name": "",
        "url": "/emob",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 140,
        "wires": [
            [
                "37f2e1de.b84b5e"
            ]
        ]
    },
    {
        "id": "37f2e1de.b84b5e",
        "type": "template",
        "z": "cad60d0e.40d8a",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<link href=\"https://fonts.googleapis.com/css?family=Raleway\" rel=\"stylesheet\">\n<style>\n* {\n  box-sizing: border-box;\n}\n\nbody {\n  background-color: #f1f1f1;\n}\n\n#regForm {\n  background-color: #ffffff;\n  margin: 100px auto;\n  font-family: Raleway;\n  padding: 40px;\n  width: 70%;\n  min-width: 300px;\n}\n\nh1 {\n  text-align: center;  \n}\n\ninput {\n  padding: 10px;\n  width: 100%;\n  font-size: 17px;\n  font-family: Raleway;\n  border: 1px solid #aaaaaa;\n}\n\n/* Mark input boxes that gets an error on validation: */\ninput.invalid {\n  background-color: #ffdddd;\n}\n\n/* Hide all steps by default: */\n.tab {\n  display: none;\n}\n\nbutton {\n  background-color: #04AA6D;\n  color: #ffffff;\n  border: none;\n  padding: 10px 20px;\n  font-size: 17px;\n  font-family: Raleway;\n  cursor: pointer;\n}\n\nbutton:hover {\n  opacity: 0.8;\n}\n\n#prevBtn {\n  background-color: #bbbbbb;\n}\n\n/* Make circles that indicate the steps of the form: */\n.step {\n  height: 15px;\n  width: 15px;\n  margin: 0 2px;\n  background-color: #bbbbbb;\n  border: none;  \n  border-radius: 50%;\n  display: inline-block;\n  opacity: 0.5;\n}\n\n.step.active {\n  opacity: 1;\n}\n\n/* Mark the steps that are finished and valid: */\n.step.finish {\n  background-color: #04AA6D;\n}\n</style>\n\n<body>\n\n<form id=\"regForm\" method=\"post\" action=\"\" onsubmit=\"return muModal(this)\" onkeydown=\"return event.key != 'Enter';\">\n  <h1>PDB quality:</h1>\n  <!-- One \"tab\" for each step in the form: -->\n  <div class=\"tab\"><b>Scan PDB serial number</b>\n    <p><input placeholder=\"PDB serial number\" onfocus=\"blur(); oninput=\"this.className = ''\" name=\"serialnumber\"></p>\n  </div>\n  <div class=\"tab\"><b>PDB top view picture</b>\n    <p><input type=\"file\" accept=\"image/*\" name=\"topview\" capture=\"camera\" oninput=\"this.className = ''\"></p>\n  </div>\n  <div class=\"tab\"><b>Please validate:</b>\n    <p><input type=\"checkbox\" oninput=\"this.className = ''\" name=\"marking\">Marking</input></p>\n    <p><input type=\"checkbox\" oninput=\"this.className = ''\" name=\"fuse\">Fuse disposiiton</input></p>\n  </div>\n  <div style=\"overflow:auto;\">\n    <div style=\"float:right;\">\n      <button type=\"button\" id=\"prevBtn\" onclick=\"nextPrev(-1)\">Previous</button>\n      <button type=\"button\" id=\"nextBtn\" onclick=\"nextPrev(1)\">Next</button>\n    </div>\n  </div>\n  <!-- Circles which indicates the steps of the form: -->\n  <div style=\"text-align:center;margin-top:40px;\">\n    <span class=\"step\"></span>\n    <span class=\"step\"></span>\n    <span class=\"step\"></span>\n  </div>\n</form>\n\n<script>\nvar currentTab = 0; // Current tab is set to be the first tab (0)\nshowTab(currentTab); // Display the current tab\n\nfunction showTab(n) {\n  // This function will display the specified tab of the form...\n  var x = document.getElementsByClassName(\"tab\");\n  x[n].style.display = \"block\";\n  //... and fix the Previous/Next buttons:\n  if (n == 0) {\n    document.getElementById(\"prevBtn\").style.display = \"none\";\n  } else {\n    document.getElementById(\"prevBtn\").style.display = \"inline\";\n  }\n  if (n == (x.length - 1)) {\n    document.getElementById(\"nextBtn\").innerHTML = \"Submit\";\n  } else {\n    document.getElementById(\"nextBtn\").innerHTML = \"Next\";\n  }\n  //... and run a function that will display the correct step indicator:\n  fixStepIndicator(n)\n}\n\nfunction nextPrev(n) {\n  // This function will figure out which tab to display\n  var x = document.getElementsByClassName(\"tab\");\n  // Exit the function if any field in the current tab is invalid:\n  if (n == 1 && !validateForm()) return false;\n  // Hide the current tab:\n  x[currentTab].style.display = \"none\";\n  // Increase or decrease the current tab by 1:\n  currentTab = currentTab + n;\n  // if you have reached the end of the form...\n  if (currentTab >= x.length) {\n    // ... the form gets submitted:\n    document.getElementById(\"regForm\").submit();\n    return false;\n  }\n  // Otherwise, display the correct tab:\n  showTab(currentTab);\n}\n\nfunction validateForm() {\n  // This function deals with validation of the form fields\n  var x, y, i, valid = true;\n  x = document.getElementsByClassName(\"tab\");\n  y = x[currentTab].getElementsByTagName(\"input\");\n  // A loop that checks every input field in the current tab:\n  for (i = 0; i < y.length; i++) {\n    // If a field is empty...\n    if (y[i].value == \"\") {\n      // add an \"invalid\" class to the field:\n      y[i].className += \" invalid\";\n      // and set the current valid status to false\n      valid = false;\n    }\n  }\n  // If the valid status is true, mark the step as finished and valid:\n  if (valid) {\n    document.getElementsByClassName(\"step\")[currentTab].className += \" finish\";\n  }\n  return valid; // return the valid status\n}\n\nfunction fixStepIndicator(n) {\n  // This function removes the \"active\" class of all steps...\n  var i, x = document.getElementsByClassName(\"step\");\n  for (i = 0; i < x.length; i++) {\n    x[i].className = x[i].className.replace(\" active\", \"\");\n  }\n  //... and adds the \"active\" class on the current step:\n  x[n].className += \" active\";\n}\n</script>\n\n<script>\nfunction muModal(f)\n{\n    console.log('Submitted')\n  var form=f,\n      modal=$('<div/>', {\n    'id':'alert',\n    'html':'<iframe src=\"http://heera.it\"></iframe>'\n  })\n  .dialog({\n    'title':'Iframe in a modal window',\n    'modal':true,\n    'width':350,\n    'height':'auto',\n    'buttons': {\n      'OK': function() { \n        $(this).dialog( \"close\" ); \n        // do something, maybe call form.submit();\n      }\n     }\n  });\n  return false;\n}\n</script>\n</body>\n</html>\n",
        "output": "str",
        "x": 270,
        "y": 140,
        "wires": [
            [
                "e9b1ca19.b4ced8"
            ]
        ]
    },
    {
        "id": "e9b1ca19.b4ced8",
        "type": "http response",
        "z": "cad60d0e.40d8a",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 440,
        "y": 140,
        "wires": []
    },
    {
        "id": "5cbed506.9e64dc",
        "type": "http in",
        "z": "cad60d0e.40d8a",
        "name": "",
        "url": "/emob",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 200,
        "wires": [
            [
                "e9b1ca19.b4ced8"
            ]
        ]
    }
]
